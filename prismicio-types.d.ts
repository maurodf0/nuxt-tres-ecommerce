// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

type PageDocumentDataSlicesSlice = ProductSlice | PictureSlice | RichTextSlice;

/**
 * Content for Page documents
 */
interface PageDocumentData {
  /**
   * Slice Zone field in *Page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<PageDocumentDataSlicesSlice> /**
   * Meta Title field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: page.meta_title
   * - **Tab**: Seo & Meta Deta
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: page.meta_description
   * - **Tab**: Seo & Meta Deta
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: page.meta_image
   * - **Tab**: Seo & Meta Deta
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;

/**
 * Content for Product documents
 */
interface ProductDocumentData {
  /**
   * Stripe ID field in *Product*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: product.stripe_id
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  stripe_id: prismic.KeyTextField;

  /**
   * Name field in *Product*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: product.name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  name: prismic.RichTextField;

  /**
   * Description field in *Product*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: product.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * Characteristic field in *Product*
   *
   * - **Field Type**: Table
   * - **Placeholder**: *None*
   * - **API ID Path**: product.characteristic
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/table
   */
  characteristic: prismic.TableField;
}

/**
 * Product document from Prismic
 *
 * - **API ID**: `product`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ProductDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<ProductDocumentData>,
    "product",
    Lang
  >;

/**
 * Content for Settings documents
 */
interface SettingsDocumentData {
  /**
   * Site Title field in *Settings*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.site_title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  site_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Settings*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.meta_description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Settings*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.meta_image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;

  /**
   * Navigation field in *Settings*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.navigation
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  navigation: prismic.Repeatable<
    prismic.LinkField<string, string, unknown, prismic.FieldState, never>
  > /**
   * Footer text field in *Settings*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.footer_text
   * - **Tab**: Footer
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */;
  footer_text: prismic.RichTextField;

  /**
   * Footer Secondary Text field in *Settings*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.footer_secondary_text
   * - **Tab**: Footer
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  footer_secondary_text: prismic.KeyTextField;
}

/**
 * Settings document from Prismic
 *
 * - **API ID**: `settings`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SettingsDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<SettingsDocumentData>,
    "settings",
    Lang
  >;

export type AllDocumentTypes =
  | PageDocument
  | ProductDocument
  | SettingsDocument;

/**
 * Primary content in *Picture → Default → Primary*
 */
export interface PictureSliceDefaultPrimary {
  /**
   * Picture field in *Picture → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: picture.default.primary.picture
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  picture: prismic.ImageField<never>;

  /**
   * Caption field in *Picture → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: picture.default.primary.caption
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  caption: prismic.RichTextField;

  /**
   * Secondary Picture (optional) field in *Picture → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: picture.default.primary.secondary_picture
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  secondary_picture: prismic.ImageField<never>;

  /**
   * Secondary Caption (Optional) field in *Picture → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: picture.default.primary.secondary_caption
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  secondary_caption: prismic.RichTextField;
}

/**
 * Default variation for Picture Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type PictureSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<PictureSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *Picture → Top → Primary*
 */
export interface PictureSliceTopPrimary {
  /**
   * Picture field in *Picture → Top → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: picture.top.primary.picture
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  picture: prismic.ImageField<never>;

  /**
   * Caption field in *Picture → Top → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: picture.top.primary.caption
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  caption: prismic.RichTextField;

  /**
   * Secondary Picture (optional) field in *Picture → Top → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: picture.top.primary.secondary_picture
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  secondary_picture: prismic.ImageField<never>;

  /**
   * Secondary Caption (Optional) field in *Picture → Top → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: picture.top.primary.secondary_caption
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  secondary_caption: prismic.RichTextField;
}

/**
 * Top variation for Picture Slice
 *
 * - **API ID**: `top`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type PictureSliceTop = prismic.SharedSliceVariation<
  "top",
  Simplify<PictureSliceTopPrimary>,
  never
>;

/**
 * Primary content in *Picture → Bottom → Primary*
 */
export interface PictureSliceBottomPrimary {
  /**
   * Picture field in *Picture → Bottom → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: picture.bottom.primary.picture
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  picture: prismic.ImageField<never>;

  /**
   * Caption field in *Picture → Bottom → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: picture.bottom.primary.caption
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  caption: prismic.RichTextField;

  /**
   * Secondary Picture (optional) field in *Picture → Bottom → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: picture.bottom.primary.secondary_picture
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  secondary_picture: prismic.ImageField<never>;

  /**
   * Secondary Caption (Optional) field in *Picture → Bottom → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: picture.bottom.primary.secondary_caption
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  secondary_caption: prismic.RichTextField;
}

/**
 * Bottom variation for Picture Slice
 *
 * - **API ID**: `bottom`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type PictureSliceBottom = prismic.SharedSliceVariation<
  "bottom",
  Simplify<PictureSliceBottomPrimary>,
  never
>;

/**
 * Slice variation for *Picture*
 */
type PictureSliceVariation =
  | PictureSliceDefault
  | PictureSliceTop
  | PictureSliceBottom;

/**
 * Picture Shared Slice
 *
 * - **API ID**: `picture`
 * - **Description**: Picture
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type PictureSlice = prismic.SharedSlice<
  "picture",
  PictureSliceVariation
>;

/**
 * Primary content in *Product → Default → Primary*
 */
export interface ProductSliceDefaultPrimary {
  /**
   * Product field in *Product → Default → Primary*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: product.default.primary.product
   * - **Documentation**: https://prismic.io/docs/fields/content-relationship
   */
  product: ContentRelationshipFieldWithData<
    [
      {
        id: "product";
        fields: ["stripe_id", "name", "description", "characteristic"];
      },
    ]
  >;
}

/**
 * Default variation for Product Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ProductSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ProductSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Product*
 */
type ProductSliceVariation = ProductSliceDefault;

/**
 * Product Shared Slice
 *
 * - **API ID**: `product`
 * - **Description**: Product
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type ProductSlice = prismic.SharedSlice<
  "product",
  ProductSliceVariation
>;

/**
 * Primary content in *RichText → Default → Primary*
 */
export interface RichTextSliceDefaultPrimary {
  /**
   * Title field in *RichText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: rich_text.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * text field in *RichText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: rich_text.default.primary.text
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  text: prismic.RichTextField;

  /**
   * ctas field in *RichText → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: rich_text.default.primary.ctas
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  ctas: prismic.Repeatable<
    prismic.LinkField<
      string,
      string,
      unknown,
      prismic.FieldState,
      "Transparent" | "Primary" | "Outline"
    >
  >;
}

/**
 * Default variation for RichText Slice
 *
 * - **API ID**: `default`
 * - **Description**: RichText
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type RichTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<RichTextSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *RichText → Fullscreen → Primary*
 */
export interface RichTextSliceFullscreenPrimary {
  /**
   * Title field in *RichText → Fullscreen → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: rich_text.fullscreen.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * text field in *RichText → Fullscreen → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: rich_text.fullscreen.primary.text
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  text: prismic.RichTextField;

  /**
   * ctas field in *RichText → Fullscreen → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: rich_text.fullscreen.primary.ctas
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  ctas: prismic.Repeatable<
    prismic.LinkField<
      string,
      string,
      unknown,
      prismic.FieldState,
      "Transparent" | "Primary" | "Outline"
    >
  >;
}

/**
 * Fullscreen variation for RichText Slice
 *
 * - **API ID**: `fullscreen`
 * - **Description**: RichText
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type RichTextSliceFullscreen = prismic.SharedSliceVariation<
  "fullscreen",
  Simplify<RichTextSliceFullscreenPrimary>,
  never
>;

/**
 * Slice variation for *RichText*
 */
type RichTextSliceVariation = RichTextSliceDefault | RichTextSliceFullscreen;

/**
 * RichText Shared Slice
 *
 * - **API ID**: `rich_text`
 * - **Description**: RichText
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type RichTextSlice = prismic.SharedSlice<
  "rich_text",
  RichTextSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      PageDocument,
      PageDocumentData,
      PageDocumentDataSlicesSlice,
      ProductDocument,
      ProductDocumentData,
      SettingsDocument,
      SettingsDocumentData,
      AllDocumentTypes,
      PictureSlice,
      PictureSliceDefaultPrimary,
      PictureSliceTopPrimary,
      PictureSliceBottomPrimary,
      PictureSliceVariation,
      PictureSliceDefault,
      PictureSliceTop,
      PictureSliceBottom,
      ProductSlice,
      ProductSliceDefaultPrimary,
      ProductSliceVariation,
      ProductSliceDefault,
      RichTextSlice,
      RichTextSliceDefaultPrimary,
      RichTextSliceFullscreenPrimary,
      RichTextSliceVariation,
      RichTextSliceDefault,
      RichTextSliceFullscreen,
    };
  }
}
